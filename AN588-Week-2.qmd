---
title: "AN588-Week-2"
format: html
editor: visual
---

```{r}
library(tidyverse)
library(stringr)
```

## Challenge 1

```{r}
# input text and split
Ulysses_string = "Stately, plump Buck Mulligan came from the stairhead, bearing a bowl of lather on which a mirror and a razor lay crossed."

Ulysses_vector <- gsub("[[:punct:]]","", Ulysses_string) # make vector of string w/o punctuation

Ulysses_vector_split <- str_split(Ulysses, " ")[[1]] #split text and "unlist" Ulysses_vector_split

Ulysses_vector_split[seq(from = 1, to = length(Ulysses_vector_split), by = 3)] # take every third element
```

## Challenge 2

```{r}
m <- matrix(data = 1:80, nrow = 8, ncol = 10, byrow = FALSE) # define matrix m

x <- m[, c(2, 3, 6)] # select columns 2, 3, and 6 of matrix m for x
x # print x

x <- m[6:8,] # select row 6-8 of matrix m for x
x # print x

x <- m[2:6, 2:9] # select elements from row 2, column 2 to row 6, column 9 of matrix m for x
x # print x
```

## Challenge 3

```{r}
a <- array(data = 400:1, dim = c(5, 5, 4, 4)) # create array a (4 levels, 400 elements)
a # print a

a[1, 1, 1, 2]

a[2, 3, 2, ] 

a[1:5, 1:5, 3, 3] 
```

## Challenge 4
```{r}
Lemuroidea <- c("Cheirogaleidae", "Lepilemuridae", "Indriidae", "Lemuridae", "Daubentoniidae") # Lemuroidea vector
Lorisoidea <- c("Lorisidae", "Galagidae") # Lorisoidea vector
Strepsirhini <- list(Lemuroidea, Lorisoidea) # Strepsirhini list
names(Strepsirhini) <- list("Lemuroidea", "Lorisoidea") # Name list elements

Catarrhini <- c("Cercopithecidae", "Hylobatidae", "Hominidae") #Catarrhini vector
Platyrrhini <- c("Cebidae", "Atelidae", "Pitheciidae") #Platyrrhini vector
Anthropoidea <- list(Catarrhini, Platyrrhini) #Anthropoidea list
names(Anthropoidea) <- list("Catarrhini", "Platyrrhini") # Name list elements


Tarsioidea <- c("Tarsioidea") # Tarsioidea list
Haplorhini <- list(Tarsioidea, Anthropoidea) # Haplorhini list
names(Haplorhini) <- list("Tarsioidea", "Anthropoidea") # Name list elements

Primates <- list(Strepsirhini, Haplorhini) #Primates list
names(Primates) <- list("Strepsirhini", "Haplorhini") # Name list elements
Primates
```

## Quarto

Quarto enables you to weave together content and executable code into a finished document. To learn more about Quarto see <https://quarto.org>.

## Running Code

When you click the **Render** button a document will be generated that includes both content and the output of embedded code. You can embed code like this:

```{r}
1 + 1
```

You can add options to executable code like this

```{r}
#| echo: false
2 * 2
```

The `echo: false` option disables the printing of code (only output is displayed).

testing
